name: CI

on:
  push:
    branches:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.6

    - name: Clone repository
      uses: actions/checkout@v2

    - name: check python and pip version
      run: python --version; pip --version

    - name: install requirements
      run: pip install -r requirements.txt

    - name: check django version
      run: python -m django --version

    - name: test
      run: python manage.py test
      continue-on-error: false

    - name: Check coverage
      id: check_coverage
      run: |
          coverage run --source='.' manage.py test
          coverage report > coverage.txt
          coverage report --fail-under=80

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.6

    - name: Clone repository
      uses: actions/checkout@v2

    - name: check python and pip version
      run: python --version; pip --version

    - name: install requirements
      run: pip install -r requirements.txt

    - name: lint
      run: flake8

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Clone Repository
      uses: actions/checkout@v2

    - name: Setup Docker
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Docker buildx builder
      run: docker buildx create --use

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract commit hash
      id: vars
      run: | 
        echo "COMMIT_HASH=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build and push Docker Gunicorn Image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile-gunicorn
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ secrets.DOCKER_USERNAME }}/p13_lettings:latest, ${{ secrets.DOCKER_USERNAME }}/p13_lettings:${{ env.COMMIT_HASH }}

    - name: Build and push Docker Nginx Image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile-nginx
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ secrets.DOCKER_USERNAME }}/p13_lettings_nginx:latest, ${{ secrets.DOCKER_USERNAME }}/p13_lettings_nginx:${{ env.COMMIT_HASH }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ test, lint, build ]
    if: github.ref == 'refs/heads/master'

    steps:
      - name: test
        run: echo "hello this is deploy step"
